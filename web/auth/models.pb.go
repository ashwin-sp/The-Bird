// Code generated by protoc-gen-go. DO NOT EDIT.
// source: web/auth/authpb/models.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthMsg struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthMsg) Reset()         { *m = AuthMsg{} }
func (m *AuthMsg) String() string { return proto.CompactTextString(m) }
func (*AuthMsg) ProtoMessage()    {}
func (*AuthMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b25e8646e97c263, []int{0}
}

func (m *AuthMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthMsg.Unmarshal(m, b)
}
func (m *AuthMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthMsg.Marshal(b, m, deterministic)
}
func (m *AuthMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthMsg.Merge(m, src)
}
func (m *AuthMsg) XXX_Size() int {
	return xxx_messageInfo_AuthMsg.Size(m)
}
func (m *AuthMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AuthMsg proto.InternalMessageInfo

func (m *AuthMsg) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthMsg) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthMsgResponse struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthMsgResponse) Reset()         { *m = AuthMsgResponse{} }
func (m *AuthMsgResponse) String() string { return proto.CompactTextString(m) }
func (*AuthMsgResponse) ProtoMessage()    {}
func (*AuthMsgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b25e8646e97c263, []int{1}
}

func (m *AuthMsgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthMsgResponse.Unmarshal(m, b)
}
func (m *AuthMsgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthMsgResponse.Marshal(b, m, deterministic)
}
func (m *AuthMsgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthMsgResponse.Merge(m, src)
}
func (m *AuthMsgResponse) XXX_Size() int {
	return xxx_messageInfo_AuthMsgResponse.Size(m)
}
func (m *AuthMsgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthMsgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthMsgResponse proto.InternalMessageInfo

func (m *AuthMsgResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AuthMsgResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AuthMsgResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type Token struct {
	TokenData            string   `protobuf:"bytes,1,opt,name=TokenData,proto3" json:"TokenData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b25e8646e97c263, []int{2}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetTokenData() string {
	if m != nil {
		return m.TokenData
	}
	return ""
}

type AuthCookieMsg struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthCookieMsg) Reset()         { *m = AuthCookieMsg{} }
func (m *AuthCookieMsg) String() string { return proto.CompactTextString(m) }
func (*AuthCookieMsg) ProtoMessage()    {}
func (*AuthCookieMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b25e8646e97c263, []int{3}
}

func (m *AuthCookieMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthCookieMsg.Unmarshal(m, b)
}
func (m *AuthCookieMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthCookieMsg.Marshal(b, m, deterministic)
}
func (m *AuthCookieMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCookieMsg.Merge(m, src)
}
func (m *AuthCookieMsg) XXX_Size() int {
	return xxx_messageInfo_AuthCookieMsg.Size(m)
}
func (m *AuthCookieMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCookieMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCookieMsg proto.InternalMessageInfo

func (m *AuthCookieMsg) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AuthCookieMsg) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthMsg)(nil), "authpb.AuthMsg")
	proto.RegisterType((*AuthMsgResponse)(nil), "authpb.AuthMsgResponse")
	proto.RegisterType((*Token)(nil), "authpb.Token")
	proto.RegisterType((*AuthCookieMsg)(nil), "authpb.AuthCookieMsg")
}

func init() {
	proto.RegisterFile("web/auth/authpb/models.proto", fileDescriptor_5b25e8646e97c263)
}

var fileDescriptor_5b25e8646e97c263 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x6a, 0xc2, 0x40,
	0x10, 0x6d, 0x5a, 0x4c, 0xeb, 0x58, 0x11, 0x16, 0xda, 0x8a, 0x78, 0x90, 0x85, 0x82, 0x27, 0x05,
	0xed, 0x0f, 0x88, 0x3d, 0x2a, 0x94, 0xa4, 0x7e, 0xc0, 0x26, 0x4e, 0x93, 0xc5, 0xba, 0x13, 0x32,
	0x9b, 0xfa, 0xdd, 0xfd, 0x83, 0x92, 0x6c, 0x62, 0x6d, 0x0f, 0x42, 0xa1, 0x97, 0x65, 0xe7, 0xcd,
	0x9b, 0xb7, 0xf3, 0x1e, 0x0b, 0xc3, 0x03, 0x46, 0x53, 0x55, 0xd8, 0xb4, 0x3a, 0xb2, 0x68, 0xba,
	0xa7, 0x2d, 0xbe, 0xf3, 0x24, 0xcb, 0xc9, 0x92, 0xf0, 0x1d, 0x28, 0x17, 0x70, 0xbd, 0x28, 0x6c,
	0xba, 0xe6, 0x44, 0x0c, 0xe0, 0x66, 0xc3, 0x98, 0x1b, 0xb5, 0xc7, 0xbe, 0x37, 0xf2, 0xc6, 0xed,
	0xe0, 0x58, 0x97, 0xbd, 0x17, 0xc5, 0x7c, 0xa0, 0x7c, 0xdb, 0xbf, 0x74, 0xbd, 0xa6, 0x96, 0x04,
	0xbd, 0x5a, 0x22, 0x40, 0xce, 0xc8, 0x30, 0x0a, 0x09, 0xb7, 0x01, 0xbe, 0xe5, 0xc8, 0xe9, 0x2b,
	0xed, 0xd0, 0xd4, 0x72, 0x3f, 0x30, 0x31, 0x82, 0xce, 0x22, 0x8e, 0x91, 0xd9, 0x51, 0x9c, 0xea,
	0x29, 0x24, 0xee, 0xc1, 0x0f, 0xad, 0xb2, 0x05, 0xf7, 0xaf, 0x46, 0xde, 0xb8, 0x15, 0xd4, 0x95,
	0x7c, 0x84, 0x96, 0x23, 0x0c, 0xa1, 0x5d, 0x5d, 0x9e, 0x95, 0x55, 0xf5, 0x1b, 0xdf, 0x80, 0xdc,
	0x40, 0xb7, 0xdc, 0x6b, 0x49, 0xb4, 0xd3, 0x58, 0x1a, 0xfc, 0x97, 0xad, 0x66, 0x9f, 0x1e, 0x74,
	0x4a, 0xdd, 0x10, 0xf3, 0x0f, 0x1d, 0xa3, 0x78, 0x02, 0x3f, 0xd4, 0x89, 0xd9, 0x64, 0xa2, 0x37,
	0x71, 0xa1, 0x4e, 0xea, 0x38, 0x06, 0x0f, 0xbf, 0x80, 0x26, 0x1f, 0x79, 0x21, 0xe6, 0xd0, 0x5a,
	0x51, 0xa2, 0xcd, 0x9f, 0x86, 0x96, 0xd0, 0x5b, 0x2b, 0x6d, 0xac, 0xd2, 0x26, 0x44, 0x66, 0x4d,
	0x46, 0xdc, 0x9d, 0xb2, 0x8f, 0x56, 0xcf, 0x89, 0xcc, 0xc0, 0x5f, 0x51, 0x42, 0x85, 0x15, 0xdd,
	0x86, 0x54, 0x19, 0x3b, 0x33, 0x13, 0xf9, 0xd5, 0xa7, 0x99, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xaa, 0x8c, 0xca, 0x0e, 0x54, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	SignUp(ctx context.Context, in *AuthMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error)
	Login(ctx context.Context, in *AuthMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error)
	MaintainSession(ctx context.Context, in *AuthCookieMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error)
	Logout(ctx context.Context, in *Token, opts ...grpc.CallOption) (*AuthMsgResponse, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) SignUp(ctx context.Context, in *AuthMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error) {
	out := new(AuthMsgResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Login(ctx context.Context, in *AuthMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error) {
	out := new(AuthMsgResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) MaintainSession(ctx context.Context, in *AuthCookieMsg, opts ...grpc.CallOption) (*AuthMsgResponse, error) {
	out := new(AuthMsgResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/MaintainSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Logout(ctx context.Context, in *Token, opts ...grpc.CallOption) (*AuthMsgResponse, error) {
	out := new(AuthMsgResponse)
	err := c.cc.Invoke(ctx, "/authpb.AuthService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	SignUp(context.Context, *AuthMsg) (*AuthMsgResponse, error)
	Login(context.Context, *AuthMsg) (*AuthMsgResponse, error)
	MaintainSession(context.Context, *AuthCookieMsg) (*AuthMsgResponse, error)
	Logout(context.Context, *Token) (*AuthMsgResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) SignUp(ctx context.Context, req *AuthMsg) (*AuthMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *AuthMsg) (*AuthMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServiceServer) MaintainSession(ctx context.Context, req *AuthCookieMsg) (*AuthMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MaintainSession not implemented")
}
func (*UnimplementedAuthServiceServer) Logout(ctx context.Context, req *Token) (*AuthMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).SignUp(ctx, req.(*AuthMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*AuthMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_MaintainSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthCookieMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).MaintainSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/MaintainSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).MaintainSession(ctx, req.(*AuthCookieMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Logout(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authpb.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _AuthService_SignUp_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "MaintainSession",
			Handler:    _AuthService_MaintainSession_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _AuthService_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "web/auth/authpb/models.proto",
}
